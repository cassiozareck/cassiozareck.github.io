How the internet works?
I want to start this by explaining how technologies evolved over the time, not how we actually see them, so we can see the problems and why things are the way
they are. I'm not gonna talk about layer 1 since I'm not too used and its just the physical layer with some electrons running over a cable or wireless

### Layer 2 (data link): Local network, the begin

In this layer we don't have an IP, routing rules, OS, NAT... we are in a very primordial and simple environment. We're in the middle of 60s

Well, lets suppose we have PC 1 and PC 2 and they have no OS. We want to share data between them. Well, lets plug a cable between them and call
this cable ethernet, now we create a function on both devices called send_data(data) and read_data() that'll just send data to this cable and read.
Now we have a conection and can share some bits. But wait, this means we would have to unplug this cable and plug into a PC 3 if we want another
conection. Oh, that's not so good!

We need something called network! I want to send data to whatever PC or device I want without be pluging and unpluging cables.
Ok, we need some device that every device will be plugged and send data, and once this happen it will forward request to whatever
device I want. Let's call this device a router. But how does this device will know which device forward a network packet?

We need some identifier for each PC, lets call this identifier a MAC Address (every network card comes with an unique 48-bit MAC address
by default). Now we modify a little our send_data function to send_data(mac, data). Remember, this router is just another device with this
send_data function. But it keeps track of a table with each MAC address bind to one ethernet cable.

Now, jumping on the real world, this process has a lot of details didn't cover and in fact, every device will have an OS, to continue the
explanation we suppose we're using linux, even routers are usually just a lightweight linux. Now, this send_data we were talking about is
implemented in most operating system as interfaces.

### Interfaces: why so subestimated and how linux implement it.
Network interface is a connection between a device and a network, you can write data in it and it will appear into another point, just like
our send_data function did when sending data to a router. One device can have more than one interface and you can list them using `ip addr show`
command.

Every device on the network including our router will have interfaces to communicate between each other. An interface is bind with a MAC address (and
usually an IP but I'll talk about it later). Your PC probably will have at least 2 interfaces, a loopback (which redirects packets
to your own machine), and an local network interface which binds your PC with the router and the local network, it's generally called enp3s0 in
linux-systems if you're using ethernet. There can also be virtualized interfaces which I'll talk more in a future post about docker network.

Now, interfaces is a very important concept because your data travels through it. In a local network you don't need more than that. There's some
protocols like ARP that serve for device discovery on the network, making your PC keep track of a table showing which devices exist locally and their
MAC Address so you can send data directly to it.

But now we want to talk with the outside world and get out from LAN. How can we do that? Well, MAC addresses alone can't help us because they don't
have routing information. We need to create a new identifier for machines outside with some routing policy.

### Layer 3 (IP): Going outside
What if we take inspiration from cellphones numbers where we have two layers: International direct dialing (IDD) that serves to represent a country and
Direct Distance Dialing (DDD) that represents a state? This is almost like how IP works, but it's an protocol not just an identifier and in fact it doesn't
care about countries, it works in a very descentralized way. Let's explore more they.

We generally think about IP as just the address: 192.168.100.2, for example, but IP, or Internet Protocol defines a set of rules of how data going outside
should flow. For example, it defines every device should have an unique IP, that every frame (data flowing on layer 2, inside LAN) will now be wrapped into a packet,
with informations like source, that is, who is sending the request and destination, the address of the device we want deliver it. Here's an image showing how
an IP packet looks like:
todo: image

In this layer we'll have the definition of default gateway, the device where data is sent to access the internet, generally represented by your modem/router.
Now, I said internet works in a descentralized way because the flow after packet goes outside LAN is a mess, it goes through lot's of gateway, asking him
if he knows where IP 10.x... is, then this packet is redirected to some place closer to this address he is looking for. If you install wireshark and bound it
to your routers mainly interface you'll see packets reaching that aren't from or to you. But since most of connections are encrypted this is no problems

And this protocol is so important that even local devices will be attached with an IP, because probably you want your PC to talk with another PC on another
country, this is why interfaces often are bound with some IP (generally the interface that connects your PC with the network will have your unique main IP).
You may ask who gives this address for my device? It's the DHCP server defined on your router he gives non-existent IP to every machine on your local network.

But we have exceed the limit of IPv4 years ago, every device can't have an unique IP. This is one of the reason LAN still exist, so we use a strategy called NAT
(network address translator), the router gives to us local IP using its pre-defined subnet mask. A subnet mask is a rule that says which part of address is common
for devices and which needs to be unique locally. It's generally something like 255.255.255.0, this it's saying the last part should be unique for the local devices.
This subnet mask is also often used to see if a packet belongs to the LAN. It checks the packet destination IP through bitwise using subnet mask and if it matches
its local so it extract the .0 part to redirect to the local device

### NAT and its implications
The only real and unique IP that exist is your ISP ip. It's the only thing web servers sees when recieve a packet reaching from you. But how they redirect it
correctly? For example, when you join www.google.com how it respond with the appropriate html to your PC? When you packet reach at ISP, it opens an unique port
with its public IP just for you, and it keeps track of a table with your corresponding local routers IP. This is a bit hard to grasp but your routers ip is
also local, this means your neighboor if using the same ISP can have the same IP from you.

The real difficult comes because there's two levels of NAT, one happening inside your home to deliver data to your devices and a CGNAT happening at ISP level
delivering data to the right local devices to it. But both your router and your ISP opens unique point of connection just for you and when web servers respond
to it they know where redirect. This is why you should start to use IPv6, maybe we can stop those complex workaround having enough IP for every device on the
world

### TCP and UDP



